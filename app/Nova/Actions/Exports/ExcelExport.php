<?php

namespace App\Nova\Actions\Exports;

use App\Exports\DeveloperTargetExport;
use App\Exports\ExcelFromCollectionExport;
use App\Exports\ExcelFromViewExport;
use App\Exports\FromCollection\ExportPosStockFromCollection;
use App\Exports\PosDetails;
use App\Exports\ReAssignSimsExport;
use App\Exports\UserInfoPrintDetails;
use App\Models\General\ViewDevloperTarget;
use App\Models\Stocks\SoldSim;
use App\Models\Stocks\ViewPosStock;
use App\Nova\Actions\Exports\ExportHelper\DevloperTargetExportHelper;
use App\Nova\Actions\Exports\ExportHelper\VisitorsExportHelper;
use App\Nova\Actions\Exports\ExportHelper\PosSockExportHelper;
use Illuminate\Support\Facades\Cookie;

class ExcelExport extends DatchedWithExcelExport
{
    /**
     * Get the displayable name of the action.
     *
     * @return string
     */

    public $name = "export";
    public $type;
    public $export_type;
    public $data_to_export;

    public function __construct($type = "", $export_type = "view", $name = "export")
    {
        $this->name        = $name;
        $this->type        = $type;
        $this->export_type = $export_type;
    }


    public function uriKey()
    {
        return "export" . $this->type . $this->export_type; // TODO: Change the autogenerated stub
    }

    public $showOnIndex = true;

    public function get_exported_data()
    {

        $request_id = request()->viaResourceId;
//        if ($this->export_type == "view" and $this->type == "visitors")
//            $data = new ExcelFromViewExport('exports.devloperTarget', DevloperTargetExportHelper::data());
//        elseif ($this->export_type == "view" and $this->type == "visitors")
            $data = new ExcelFromViewExport('exports.visitors', VisitorsExportHelper::data(2000));
//        elseif ($this->type == "pos_stocks")
//            $data = new ExcelFromCollectionExport(PosSockExportHelper::data(-1));
//
//        elseif ($this->export_type == "view" and $this->type == "pos_details")
//            $data = new ExcelFromViewExport('exports.pos_details', VisitorsExportHelper::data(2000));
//        elseif ($this->type == "pos_details")
//            $data = new ExcelFromCollectionExport(VisitorsExportHelper::data(-1));

        return $data;
    }


}
